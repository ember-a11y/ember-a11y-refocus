{"version":3,"file":"routing.js","sources":["../../src/utils/routing.js"],"sourcesContent":["/**\n * Returns true if the given RouteInfo objects represent the same route in the\n * tree, with matching params and query params.\n *\n * @param {RouteInfo} a\n * @param {RouteInfo} b\n * @returns {boolean}\n */\nexport function routeInfoEqual(a, b) {\n  do {\n    if (!a || !b) {\n      return false;\n    }\n\n    if (a.name !== b.name) {\n      return false;\n    }\n\n    if (!shallowEqual(a.params, b.params)) {\n      return false;\n    }\n\n    if (!shallowEqual(a.queryParams, b.queryParams)) {\n      return false;\n    }\n\n    a = a.parent;\n    b = b.parent;\n  } while (a || b);\n\n  return true;\n}\n\nfunction shallowEqual(a, b) {\n  let keys = new Set([...Object.keys(a), ...Object.keys(b)]);\n\n  for (let key of keys) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"names":["routeInfoEqual","a","b","name","shallowEqual","params","queryParams","parent","keys","Set","Object","key"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,cAAcA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACnC,GAAG;AACD,IAAA,IAAI,CAACD,CAAC,IAAI,CAACC,CAAC,EAAE;AACZ,MAAA,OAAO,KAAK;AACd;AAEA,IAAA,IAAID,CAAC,CAACE,IAAI,KAAKD,CAAC,CAACC,IAAI,EAAE;AACrB,MAAA,OAAO,KAAK;AACd;IAEA,IAAI,CAACC,YAAY,CAACH,CAAC,CAACI,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC,EAAE;AACrC,MAAA,OAAO,KAAK;AACd;IAEA,IAAI,CAACD,YAAY,CAACH,CAAC,CAACK,WAAW,EAAEJ,CAAC,CAACI,WAAW,CAAC,EAAE;AAC/C,MAAA,OAAO,KAAK;AACd;IAEAL,CAAC,GAAGA,CAAC,CAACM,MAAM;IACZL,CAAC,GAAGA,CAAC,CAACK,MAAM;GACb,QAAQN,CAAC,IAAIC,CAAC;AAEf,EAAA,OAAO,IAAI;AACb;AAEA,SAASE,YAAYA,CAACH,CAAC,EAAEC,CAAC,EAAE;EAC1B,IAAIM,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAGC,MAAM,CAACF,IAAI,CAACP,CAAC,CAAC,EAAE,GAAGS,MAAM,CAACF,IAAI,CAACN,CAAC,CAAC,CAAC,CAAC;AAE1D,EAAA,KAAK,IAAIS,GAAG,IAAIH,IAAI,EAAE;IACpB,IAAIP,CAAC,CAACU,GAAG,CAAC,KAAKT,CAAC,CAACS,GAAG,CAAC,EAAE;AACrB,MAAA,OAAO,KAAK;AACd;AACF;AAEA,EAAA,OAAO,IAAI;AACb;;;;"}